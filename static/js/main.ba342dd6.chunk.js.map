{"version":3,"sources":["TodoList.js","Home.js","App.js","index.js"],"names":["TodoList","props","list","filteredList","handleComplete","handleDelete","className","map","item","completed","onClick","text","id","Home","darkTheme","setDarkTheme","useState","setList","todo","setTodo","status","setStatus","setFilteredList","setStorageItem","key","value","localStorage","setItem","JSON","stringify","getStorageItem","setState","parse","getItem","statusHandler","useEffect","console","log","document","body","classList","add","remove","filter","filterHandler","action","onSubmit","e","preventDefault","Math","random","type","placeholder","onChange","target","check","newList","length","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba342dd6.chunk.js","sourcesContent":["import {useState} from 'react'\r\nconst TodoList = (props) => {\r\n    const list = props.list\r\n    const filteredList = props.filteredList\r\n    const handleComplete = props.handleComplete\r\n    const handleDelete = props.handleDelete\r\n    return ( \r\n        <div className=\"todo-list\">\r\n            {filteredList.map((item) =>{\r\n                return(\r\n                    <div className={`todo-wrap ${item.completed == true ? \"check\" : \"\"}`} key={item.id}>\r\n                        <button onClick={() => handleComplete(item)} className='stat-btn circle-btn'></button>\r\n                        <div className=\"todo-main\">\r\n                            <div className=\"todo\">{item.text}</div>\r\n                            <button onClick={() => handleDelete(item.id)} className='delete circle-btn'></button>\r\n                        </div>\r\n                        \r\n                        {/* <button onClick={() => handleDelete(item.id)}>Delete</button> */}\r\n                    </div>\r\n                )\r\n            }\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TodoList;","import {useState, useEffect} from 'react'\r\nimport TodoList from './TodoList';\r\nconst Home = (props) => {\r\n    const darkTheme = props.darkTheme\r\n    const setDarkTheme = props.setDarkTheme\r\n    const [list, setList] = useState([])\r\n    const [todo, setTodo] = useState('')\r\n    const [status, setStatus] = useState('all')\r\n    const [filteredList, setFilteredList] = useState([])\r\n    const handleAdd = (e) => {\r\n        e.preventDefault();\r\n        if(todo){\r\n            setList([...list, {text: todo, completed: false, id: Math.random() * 20}])\r\n            setTodo('')\r\n        }\r\n    }\r\n    // save local\r\n    const setStorageItem = (key, value) => {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n    const getStorageItem = (key,setState) => {\r\n            let storageList = JSON.parse(localStorage.getItem(key))\r\n            setState(storageList)\r\n    }\r\n    const handleClear = () => {\r\n        const newList = list.filter(item => item.completed == false) \r\n        setList(newList)\r\n    }\r\n    const handleDelete = (id) => {\r\n        const newList = list.filter(item => item.id !== id)\r\n        setList(newList)\r\n    }\r\n    const handleComplete = (item) => {\r\n        setList(list.map(check => {\r\n            if(check.id === item.id){\r\n                return{\r\n                    ...check, completed: !check.completed\r\n                };\r\n            }\r\n            return check;\r\n        }))\r\n    }\r\n    const themeHandler = () => {\r\n        setDarkTheme(!darkTheme)\r\n    }\r\n\r\n    // const statusHandler = (e) => {\r\n    //     setStatus(e.target.value)\r\n    // }\r\n    const statusHandler = (value) => {\r\n        setStatus(value)\r\n    }\r\n    const filterHandler = () => {\r\n        switch (status) {\r\n            case \"completed\":\r\n                setFilteredList(list.filter(item => item.completed === true))\r\n                break;\r\n            case \"ongoing\":\r\n                setFilteredList(list.filter(item => item.completed === false))\r\n                break;\r\n            default:\r\n                setFilteredList(list)\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getStorageItem('list',setList)\r\n        getStorageItem('theme', setDarkTheme)\r\n        console.log(list)\r\n    }, [])\r\n    useEffect(() => {\r\n        if(darkTheme == false){\r\n            document.body.classList.add('light')\r\n        }\r\n        else{\r\n            document.body.classList.remove('light')\r\n        }\r\n        setStorageItem('theme', darkTheme)\r\n        \r\n    }, [darkTheme])\r\n\r\n    useEffect(() => {\r\n        filterHandler()\r\n        setStorageItem('list', list)\r\n    }, [list,status])\r\n    return ( \r\n        <div className=\"home\">\r\n            <div className=\"header\">\r\n                <h1>TODO</h1>\r\n                <button onClick={themeHandler} className='theme'></button>\r\n            </div>\r\n            \r\n            <form action=\"\" onSubmit={handleAdd}>\r\n                {/* {<input type=\"submit\" value=''  className='submit'/>} */}\r\n                <button type=\"submit\" className='submit circle-btn'></button>\r\n                <input className='input' placeholder='Create a new todo...'\r\n                value={todo}\r\n                onChange={(e) => setTodo(e.target.value)}\r\n                ></input>\r\n                \r\n                {/* {<select onChange={statusHandler}>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"ongoing\">On Going</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                </select>} */}\r\n            </form>\r\n            <div className=\"content\">\r\n            {list && <TodoList\r\n             list={list}\r\n               handleComplete={handleComplete}\r\n               handleDelete={handleDelete}\r\n                filteredList={filteredList}\r\n\r\n            />}\r\n            <div className=\"info\">\r\n                <div className=\"remain\">{list.filter(item => item.completed == false).length} items left</div>\r\n                <div className=\"filters\">\r\n                    <button onClick={() => statusHandler('all')} className={status == 'all' ? 'active' : ''}>All</button>\r\n                    <button onClick={() => statusHandler('ongoing')} className={status == 'ongoing' ? 'active' : ''}>Active</button>\r\n                    <button onClick={() => statusHandler('completed')} className={status == 'completed' ? 'active' : ''}>Completed</button>\r\n                </div>\r\n                <button className='clear' onClick={handleClear}>Clear Completed</button>\r\n            </div>\r\n            </div>\r\n            \r\n        </div>\r\n     );\r\n}\r\nexport default Home;","import Home from \"./Home\";\nimport {useState} from 'react'\nfunction App() {\n  const [darkTheme, setDarkTheme] = useState(true)\n  return (\n    <div className=\"App\">\n            <Home path='/' darkTheme={darkTheme} setDarkTheme={setDarkTheme}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}